MOV R0, #0x1
mov r0, #2
ldr r3, [pc, #28]
str r7, [r3]
mov r1, #3
LDR R0, [R1]
LDR R0, [R1, R2]
LDR R0, [R1, R2]!
LDR R0, [R1, R2, RRX]
LDR R0, [R1], R2, RRX
LDR R0, [R1, R2, RRX]!
LDR R0, [R1], R2, LSL #2
LDR R0, [R1, R2, LSL #2]
LDR R0, [R1, R2, LSL #2]!
STR R0, [R1]
STR R0, [R1, R2]
STR R0, [R1, R2]!
STR R0, [R1, R2, RRX]
STR R0, [R1], R2, RRX
STR R0, [R1, R2, RRX]!
STR R0, [R1], R2, LSL #2
STR R0, [R1, R2, LSL #2]
STR R0, [R1, R2, LSL #2]!
MOV R0, #-0x1
mov r0, #-2
ldr r3, [pc, #-28]
push	{fp}		; (str fp, [sp, #-4]!)
add	fp, sp, #0
sub	sp, sp, #12
str	r0, [fp, #-8]
ldr	r3, [fp, #-8]
add	r3, r3, #1
mov	r0, r3
add	sp, fp, #0
pop	{fp}		; (ldr fp, [sp], #4)
mov	pc, lr
push	{fp, lr}
add	fp, sp, #4
sub	sp, sp, #8
mov	r3, #0
str	r3, [fp, #-8]
ldr	r0, [fp, #-8]
mov	r3, r0
nop			; (mov r0, r0)
mov	r0, r3
sub	sp, fp, #4
pop	{fp, pc}
TEST: LDRB R5, [R0, R3]
STRB R5, [R1, R3]
ADD R3, R3, #1
MOV PC, LR
BL TEST
LDR R3, [R1], #4
SUB R4, R3, #9
lsl r1, r0, #0
lsl r1, r0, #31
lsr r1, r0, #0
lsr r1, r0, #1
lsr r1, r0, #32
asr r1, r0, #0
asr r1, r0, #1
asr r1, r0, #32
ror r1, r0, #0
ror r1, r0, #1
ror r1, r0, #31